




v_host_ptr	WebServer::choose_vHost(int socket_fd)
{
	
};

// 
// trier par h/p puis par host
// 2 server peuvent avoir le mem host:port
// faire 1 seul socket pour ca ?
// default server si pas de server precise ou inconnu
// server demande si preciser  (curl --resolve 'test:8080:127.0.0.1' http://127.0.0.1:8080) //-H 'Host: server_name'


struct s_sockets
{
	int			fd;
	struct sockaddr_in	sin;
	uint32_t	host;
	uint16_t	port;
	std::vector<v_host_ptr>	v_hosts;
};
















HTTP requests 

METHOD /path/to/request HTTP/1.1

if typo before verssion -> error 400 
if version not support -> error 505
if no host fiel -> error 400 (rfc)
unknow header file -> ignored
unkonw header value -> ignored 
if header field (total size or a simgle field(indicated it in body response)) too large -> 431
if URI too long -> 414
	-error conversion from post to get
	-loop of redirection in URI
	-server under attack

class request :

string 	method 
string	URI
string	http_version
map<string, string> header
string	body

class response:

int 	status_code
string	status
map<string, string> header
string	body



1) typo
2) version 
3) method
4) uri ?

User-Agent: python-requests/2.22.0\r\nAccept-Encoding: gzip\r\nAccept: */*\r\nConnection: keep-alive\r\nhost: none\r\nAccept-Language: fr\r\n\r\n 

User-Agent: python-requests/2.22.0
Accept-Encoding: gzip
Accept: */*
Connection: keep-alive
host: none
Accept-Language: fr




The Host request-header field is used to specify the Internet host 
and the port number of the resource being requested